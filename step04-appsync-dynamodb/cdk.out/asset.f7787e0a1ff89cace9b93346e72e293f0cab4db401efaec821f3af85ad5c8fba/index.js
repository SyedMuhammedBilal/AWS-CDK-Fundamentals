"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AWS = require("aws-sdk");
const docClient = new AWS.DynamoDB.DocumentClient();
exports.handler = async (event) => {
    if (event.info.fieldName === 'getTodo') {
        /** @dev get todo from id */
        return await getTodo(event.arguments.id);
    }
    else if (event.info.fieldName === 'addTodo') {
        /** @dev add todo with description */
        return await addTodo(event.arguments.description);
    }
    else {
        return 'server error';
    }
};
const addTodo = async (desc) => {
    const params = {
        TableName: process.env.TestTableName,
        Item: desc
    };
    try {
        const response = await docClient.put(params).promise();
        return (response === null || response === void 0 ? void 0 : response.Attributes['id']) || '';
    }
    catch (error) {
        return error;
    }
};
const getTodo = async (id) => {
    const params = {
        TableName: process.env.TestTableName,
        Item: id
    };
    try {
        const response = await docClient.scan(params).promise();
        return response;
    }
    catch (error) {
        return error;
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUE4QjtBQUM5QixNQUFNLFNBQVMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxFQUFFLENBQUM7QUFZcEQsT0FBTyxDQUFDLE9BQU8sR0FBRyxLQUFLLEVBQUUsS0FBbUIsRUFBRSxFQUFFO0lBQzVDLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLEtBQUssU0FBUyxFQUFFO1FBQ3BDLDRCQUE0QjtRQUM1QixPQUFPLE1BQU0sT0FBTyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDNUM7U0FBTSxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxLQUFLLFNBQVMsRUFBRTtRQUMzQyxxQ0FBcUM7UUFDckMsT0FBTyxNQUFNLE9BQU8sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0tBQ3JEO1NBQU07UUFDSCxPQUFPLGNBQWMsQ0FBQTtLQUN4QjtBQUNMLENBQUMsQ0FBQTtBQUVELE1BQU0sT0FBTyxHQUFHLEtBQUssRUFBRSxJQUFZLEVBQWdCLEVBQUU7SUFDakQsTUFBTSxNQUFNLEdBQVE7UUFDaEIsU0FBUyxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYTtRQUNwQyxJQUFJLEVBQUUsSUFBSTtLQUNiLENBQUE7SUFDRCxJQUFJO1FBQ0EsTUFBTSxRQUFRLEdBQVEsTUFBTSxTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzVELE9BQU8sQ0FBQSxRQUFRLGFBQVIsUUFBUSx1QkFBUixRQUFRLENBQUUsVUFBVSxDQUFDLElBQUksTUFBSyxFQUFFLENBQUM7S0FDM0M7SUFBQyxPQUFPLEtBQUssRUFBRTtRQUNaLE9BQU8sS0FBWSxDQUFBO0tBQ3RCO0FBQ0wsQ0FBQyxDQUFBO0FBRUQsTUFBTSxPQUFPLEdBQUcsS0FBSyxFQUFFLEVBQVUsRUFBZ0IsRUFBRTtJQUMvQyxNQUFNLE1BQU0sR0FBUTtRQUNoQixTQUFTLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhO1FBQ3BDLElBQUksRUFBRSxFQUFFO0tBQ1gsQ0FBQTtJQUNELElBQUk7UUFDQSxNQUFNLFFBQVEsR0FBRyxNQUFNLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDeEQsT0FBTyxRQUFRLENBQUM7S0FDbkI7SUFBQyxPQUFPLEtBQUssRUFBRTtRQUNaLE9BQU8sS0FBWSxDQUFBO0tBQ3RCO0FBQ0wsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQVdTIGZyb20gJ2F3cy1zZGsnXG5jb25zdCBkb2NDbGllbnQgPSBuZXcgQVdTLkR5bmFtb0RCLkRvY3VtZW50Q2xpZW50KCk7XG5cbnR5cGUgQXBwU3luY0V2ZW50ID0ge1xuICAgIGluZm86IHtcbiAgICAgICAgZmllbGROYW1lOiBzdHJpbmdcbiAgICB9XG4gICAgYXJndW1lbnRzOiB7XG4gICAgICAgIGlkOiBzdHJpbmcsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBzdHJpbmdcbiAgICB9XG59XG5cbmV4cG9ydHMuaGFuZGxlciA9IGFzeW5jIChldmVudDogQXBwU3luY0V2ZW50KSA9PiB7XG4gICAgaWYgKGV2ZW50LmluZm8uZmllbGROYW1lID09PSAnZ2V0VG9kbycpIHtcbiAgICAgICAgLyoqIEBkZXYgZ2V0IHRvZG8gZnJvbSBpZCAqL1xuICAgICAgICByZXR1cm4gYXdhaXQgZ2V0VG9kbyhldmVudC5hcmd1bWVudHMuaWQpO1xuICAgIH0gZWxzZSBpZiAoZXZlbnQuaW5mby5maWVsZE5hbWUgPT09ICdhZGRUb2RvJykge1xuICAgICAgICAvKiogQGRldiBhZGQgdG9kbyB3aXRoIGRlc2NyaXB0aW9uICovXG4gICAgICAgIHJldHVybiBhd2FpdCBhZGRUb2RvKGV2ZW50LmFyZ3VtZW50cy5kZXNjcmlwdGlvbik7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuICdzZXJ2ZXIgZXJyb3InXG4gICAgfVxufVxuXG5jb25zdCBhZGRUb2RvID0gYXN5bmMgKGRlc2M6IHN0cmluZyk6IFByb21pc2U8YW55PiA9PiB7XG4gICAgY29uc3QgcGFyYW1zOiBhbnkgPSB7XG4gICAgICAgIFRhYmxlTmFtZTogcHJvY2Vzcy5lbnYuVGVzdFRhYmxlTmFtZSxcbiAgICAgICAgSXRlbTogZGVzY1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZTogYW55ID0gYXdhaXQgZG9jQ2xpZW50LnB1dChwYXJhbXMpLnByb21pc2UoKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlPy5BdHRyaWJ1dGVzWydpZCddIHx8ICcnO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBlcnJvciBhcyBhbnlcbiAgICB9XG59XG5cbmNvbnN0IGdldFRvZG8gPSBhc3luYyAoaWQ6IHN0cmluZyk6IFByb21pc2U8YW55PiA9PiB7XG4gICAgY29uc3QgcGFyYW1zOiBhbnkgPSB7XG4gICAgICAgIFRhYmxlTmFtZTogcHJvY2Vzcy5lbnYuVGVzdFRhYmxlTmFtZSxcbiAgICAgICAgSXRlbTogaWRcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBkb2NDbGllbnQuc2NhbihwYXJhbXMpLnByb21pc2UoKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBlcnJvciBhcyBhbnlcbiAgICB9XG59XG4iXX0=