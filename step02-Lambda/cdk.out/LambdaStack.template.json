{
  "Resources": {
    "HelloFunctionServiceRole186F1BA8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/HelloFunction/ServiceRole/Resource"
      }
    },
    "HelloFunctionD909AE8C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters7372a3996ab8b6b7670c78e82aeb164d01a2e53c65c93cbbcfd2a595a43f04adS3BucketBEB953F3"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters7372a3996ab8b6b7670c78e82aeb164d01a2e53c65c93cbbcfd2a595a43f04adS3VersionKeyC0C08E97"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters7372a3996ab8b6b7670c78e82aeb164d01a2e53c65c93cbbcfd2a595a43f04adS3VersionKeyC0C08E97"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "HelloFunctionServiceRole186F1BA8",
            "Arn"
          ]
        },
        "Handler": "hello.handler",
        "MemorySize": 1536,
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "HelloFunctionServiceRole186F1BA8"
      ],
      "Metadata": {
        "aws:cdk:path": "LambdaStack/HelloFunction/Resource",
        "aws:asset:path": "asset.7372a3996ab8b6b7670c78e82aeb164d01a2e53c65c93cbbcfd2a595a43f04ad",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "endpointE7B9679B": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "endpoint"
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/endpoint/Resource"
      }
    },
    "endpointCloudWatchRole52213BC3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/endpoint/CloudWatchRole/Resource"
      }
    },
    "endpointAccount6DA1D142": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "endpointCloudWatchRole52213BC3",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "endpointE7B9679B"
      ],
      "Metadata": {
        "aws:cdk:path": "LambdaStack/endpoint/Account"
      }
    },
    "endpointDeployment457D977D549516bfec406d253ad72f72283620fa": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "endpointE7B9679B"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "endpointproxyANY6E13FB92",
        "endpointproxy3148D98A",
        "endpointANY514C2A81"
      ],
      "Metadata": {
        "aws:cdk:path": "LambdaStack/endpoint/Deployment/Resource"
      }
    },
    "endpointDeploymentStageprod2CD5F9C4": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "endpointE7B9679B"
        },
        "DeploymentId": {
          "Ref": "endpointDeployment457D977D549516bfec406d253ad72f72283620fa"
        },
        "StageName": "prod"
      },
      "DependsOn": [
        "endpointAccount6DA1D142"
      ],
      "Metadata": {
        "aws:cdk:path": "LambdaStack/endpoint/DeploymentStage.prod/Resource"
      }
    },
    "endpointproxy3148D98A": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "endpointE7B9679B",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "endpointE7B9679B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/endpoint/Default/{proxy+}/Resource"
      }
    },
    "endpointproxyANYApiPermissionLambdaStackendpointC70C155FANYproxy943D2FC6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloFunctionD909AE8C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "endpointE7B9679B"
              },
              "/",
              {
                "Ref": "endpointDeploymentStageprod2CD5F9C4"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/endpoint/Default/{proxy+}/ANY/ApiPermission.LambdaStackendpointC70C155F.ANY..{proxy+}"
      }
    },
    "endpointproxyANYApiPermissionTestLambdaStackendpointC70C155FANYproxy0274995D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloFunctionD909AE8C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "endpointE7B9679B"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/endpoint/Default/{proxy+}/ANY/ApiPermission.Test.LambdaStackendpointC70C155F.ANY..{proxy+}"
      }
    },
    "endpointproxyANY6E13FB92": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "endpointproxy3148D98A"
        },
        "RestApiId": {
          "Ref": "endpointE7B9679B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HelloFunctionD909AE8C",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/endpoint/Default/{proxy+}/ANY/Resource"
      }
    },
    "endpointANYApiPermissionLambdaStackendpointC70C155FANY56482C6E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloFunctionD909AE8C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "endpointE7B9679B"
              },
              "/",
              {
                "Ref": "endpointDeploymentStageprod2CD5F9C4"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/endpoint/Default/ANY/ApiPermission.LambdaStackendpointC70C155F.ANY.."
      }
    },
    "endpointANYApiPermissionTestLambdaStackendpointC70C155FANY4AC74779": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloFunctionD909AE8C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "endpointE7B9679B"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/endpoint/Default/ANY/ApiPermission.Test.LambdaStackendpointC70C155F.ANY.."
      }
    },
    "endpointANY514C2A81": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "endpointE7B9679B",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "endpointE7B9679B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HelloFunctionD909AE8C",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/endpoint/Default/ANY/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/02QwU7DMAyGn4V7mjGBEEe6TZxAVOUJTGpK1iapYodRRX13kpShnvzZsv3/9l7u7x/l7c0TXKhS3bCLynmU8Z1BDaImQk7Ya9uLo7PEPigWx0/bgAeDjD4nb4GnUMotkgteYebU32nWzi4iL48jmI8OZHwOVuVy7tlyg95oojKgwcjYurEsynERdFdBtkOyuEq5PAQ1IB+AUMCke2C8wCzjSxFKVrie9J+rK9ZKuWBZnHAa3WzQFtubLF9bVFe4HlREGu9+5u2J//yK/OW6XFppWRZhXYfyTLvv/UN6cvrxmbSufFLXBmW7xl8BQy/GgAEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "AssetParameters7372a3996ab8b6b7670c78e82aeb164d01a2e53c65c93cbbcfd2a595a43f04adS3BucketBEB953F3": {
      "Type": "String",
      "Description": "S3 bucket for asset \"7372a3996ab8b6b7670c78e82aeb164d01a2e53c65c93cbbcfd2a595a43f04ad\""
    },
    "AssetParameters7372a3996ab8b6b7670c78e82aeb164d01a2e53c65c93cbbcfd2a595a43f04adS3VersionKeyC0C08E97": {
      "Type": "String",
      "Description": "S3 key for asset version \"7372a3996ab8b6b7670c78e82aeb164d01a2e53c65c93cbbcfd2a595a43f04ad\""
    },
    "AssetParameters7372a3996ab8b6b7670c78e82aeb164d01a2e53c65c93cbbcfd2a595a43f04adArtifactHash1593FF30": {
      "Type": "String",
      "Description": "Artifact hash for asset \"7372a3996ab8b6b7670c78e82aeb164d01a2e53c65c93cbbcfd2a595a43f04ad\""
    }
  },
  "Outputs": {
    "endpointEndpoint5E1E9134": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "endpointE7B9679B"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "endpointDeploymentStageprod2CD5F9C4"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}